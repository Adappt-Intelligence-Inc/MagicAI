
# Define the target architecture
TARGET_ARCH = mips

INSTALLPATH="/workspace/adappt/T31/ISVP-T31-1.1.6-20221229/software/Ingenic-SDK-T31-1.1.6-20221229/resource/toolchain/gcc_540/mips-gcc540-glibc222-64bit-r3.3.0"
#export INSTALLPATH="/workspace/adappt/T31/ISVP-T31-1.1.6-20221229/software/Ingenic-SDK-T31-1.1.6-20221229/resource/toolchain/gcc_472/mips-gcc472-glibc216-64bit"
TOOLCHAIN=$INSTALLPATH/bin
CROSS_COMPILE=$TOOLCHAIN/mips-linux-gnu-
CC=${CROSS_COMPILE}gcc
CXX=${CROSS_COMPILE}g++
LD=${CROSS_COMPILE}ld
AR=${CROSS_COMPILE}ar
STRIP=${CROSS_COMPILE}strip
NM=${CROSS_COMPILE}nm
RANLIB=${CROSS_COMPILE}ranlib
# CFLAGS="-static -O2  -march=mips32r2 -uClibc++  -std=c++11 -I${INSTALLPATH}/include -I${INSTALLPATH}/_install/include/"
# export CPPFLAGS="-static -O2  -uClibc++ -std=c++11 -I${INSTALLPATH}/include -I${INSTALLPATH}/_install/include/ -I${INSTALLPATH}/_install/include/ncursesw/"
# export LDFLAGS="-static -uClibc++ -L${INSTALLPATH}/lib -L${INSTALLPATH}/_install/lib/"





# CFLAGS   +=  -I../xailient-sdk/include/ 

# LDFLAGS   += -L../xailient-sdk/lib/ -L/experiment/mediaserver/src/json/xailient-sdk/lib/


################################################
################################################################################




# Makefile for cross compiling C++ code for MIPS "-uClibc"



# Define the cross compiler prefix
CROSS_COMPILE = mips-linux-gnu-

# Define the C++ compiler flags
CPPFLAGS += -std=c++11 -pthread -I../xailient-sdk/include/ 

# Define the linker flags
LDFLAGS +=  -L../xailient-sdk/lib/ -L/experiment/mediaserver/src/json/xailient-sdk/lib/ -L${INSTALLPATH}/mips-linux-gnu/lib -muclibc

LDLIBS    += -lpthread -ldl -lxailient-fi


# Define the source files
SRCS = test.cpp

# Define the object files
OBJS = $(SRCS:.cpp=.o)

# Define the executable file
EXEC = test

# Define the all rule
all: $(EXEC)

# Define the clean rule
clean:
	rm -f $(OBJS) $(EXEC)

# Define the compile rule
$(OBJS): %.o: %.cpp
	$(CROSS_COMPILE)g++ $(CPPFLAGS) -c $< -o $@

# Define the link rule
$(EXEC): $(OBJS)
	$(CROSS_COMPILE)g++ $(LDFLAGS) $(LDLIBS) $^ -o $@